From 236634eed58fa6e00cc50f19e7202903a9d8fae6 Mon Sep 17 00:00:00 2001
From: q66 <daniel@octaforge.org>
Date: Thu, 12 Dec 2019 04:03:56 +0100
Subject: [PATCH] libgcc: use -mno-gnu-attribute for 128-bit IBM ldouble
 support code

Doing this will allow libgcc to emit the appropriate symbols without actually
emitting the FP ABI tag for them, which allows 64-bit long double environments
to function and even link statically while still allowing usage of
explicit __ibm128.
---
 libgcc/config/rs6000/t-ibm-ldouble | 2 +-
 libgcc/config/rs6000/t-linux       | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/libgcc/config/rs6000/t-ibm-ldouble b/libgcc/config/rs6000/t-ibm-ldouble
index b132784..fb5eca8 100644
--- a/libgcc/config/rs6000/t-ibm-ldouble
+++ b/libgcc/config/rs6000/t-ibm-ldouble
@@ -3,4 +3,6 @@
 
 HOST_LIBGCC2_CFLAGS += -mlong-double-128
 
+HOST_LIBGCC2_CFLAGS += -mno-gnu-attribute
+
 SHLIB_MAPFILES += $(srcdir)/config/rs6000/libgcc-ibm-ldouble.ver
diff --git a/libgcc/config/rs6000/t-linux b/libgcc/config/rs6000/t-linux
index 4f6d4c4..fa93bb6 100644
--- a/libgcc/config/rs6000/t-linux
+++ b/libgcc/config/rs6000/t-linux
@@ -2,6 +2,8 @@
 
 HOST_LIBGCC2_CFLAGS += -mlong-double-128
 
+HOST_LIBGCC2_CFLAGS += -mno-gnu-attribute
+
 # This is a way of selecting -mcmodel=small for ppc64, which gives
 # smaller and faster libgcc code.  Directly specifying -mcmodel=small
 # would need to take into account targets for which -mcmodel is invalid.
-- 
2.24.0
